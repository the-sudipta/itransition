{"version":3,"file":"server.cjs","sources":["../src/server.js"],"sourcesContent":["#!/usr/bin/env node\n\nimport WebSocket from 'ws'\nimport http from 'http'\nimport * as number from 'lib0/number'\nimport { setupWSConnection } from './utils.js'\n\nconst wss = new WebSocket.Server({ noServer: true })\nconst host = process.env.HOST || 'localhost'\nconst port = number.parseInt(process.env.PORT || '1234')\n\nconst server = http.createServer((_request, response) => {\n  response.writeHead(200, { 'Content-Type': 'text/plain' })\n  response.end('okay')\n})\n\nwss.on('connection', setupWSConnection)\n\nserver.on('upgrade', (request, socket, head) => {\n  // You may check auth of request here..\n  // Call `wss.HandleUpgrade` *after* you checked whether the client has access\n  // (e.g. by checking cookies, or url parameters).\n  // See https://github.com/websockets/ws#client-authentication\n  wss.handleUpgrade(request, socket, head, /** @param {any} ws */ ws => {\n    wss.emit('connection', ws, request)\n  })\n})\n\nserver.listen(port, host, () => {\n  console.log(`running at '${host}' on port ${port}`)\n})\n"],"names":["number","setupWSConnection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,MAAM,GAAG,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;AACnD,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI;AACjC,MAAM,IAAI,GAAGA,iBAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM;;AAEvD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE,QAAQ,KAAK;AACzD,EAAE,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,cAAc,EAAE,YAAY,EAAE;AAC1D,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM;AACrB,CAAC;;AAED,GAAG,CAAC,EAAE,CAAC,YAAY,EAAEC,uBAAiB;;AAEtC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,KAAK;AAChD;AACA;AACA;AACA;AACA,EAAE,GAAG,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,yBAAyB,EAAE,IAAI;AACxE,IAAI,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,OAAO;AACtC,GAAG;AACH,CAAC;;AAED,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM;AAChC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACpD,CAAC;;"}